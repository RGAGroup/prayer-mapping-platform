-- Fix user profile creation trigger
-- The issue was that the trigger was not properly handling all required columns

CREATE OR REPLACE FUNCTION handle_new_user()
RETURNS TRIGGER AS $$
DECLARE
  user_count INTEGER;
  user_role TEXT DEFAULT 'user';
BEGIN
  -- Check if this is the first user (make them admin)
  SELECT COUNT(*) INTO user_count FROM user_profiles;
  
  IF user_count = 0 THEN
    user_role := 'admin';
  END IF;

  -- Create user profile with all required columns
  -- Note: id is auto-generated by UUID default, so we don't need to specify it
  INSERT INTO public.user_profiles (
    user_id,
    role,
    display_name,
    terms_accepted,
    terms_accepted_at,
    terms_version
  ) VALUES (
    NEW.id,
    user_role,
    COALESCE(NEW.raw_user_meta_data->>'display_name', split_part(NEW.email, '@', 1)),
    COALESCE((NEW.raw_user_meta_data->>'terms_accepted')::boolean, FALSE),
    CASE
      WHEN (NEW.raw_user_meta_data->>'terms_accepted')::boolean = TRUE
      THEN (NEW.raw_user_meta_data->>'terms_accepted_at')::timestamptz
      ELSE NULL
    END,
    COALESCE(NEW.raw_user_meta_data->>'terms_version', '1.0')
  );

  RETURN NEW;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Recreate trigger to ensure it's properly attached
DROP TRIGGER IF EXISTS on_auth_user_created ON auth.users;
CREATE TRIGGER on_auth_user_created
  AFTER INSERT ON auth.users
  FOR EACH ROW EXECUTE FUNCTION handle_new_user(); 